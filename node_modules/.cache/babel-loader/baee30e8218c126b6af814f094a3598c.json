{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\15073\\\\Desktop\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '05add515f5534c1aa9f0376ba5598edd'\n});\nconst particleOptions = {\n  interactivity: {\n    detect_on: \"window\",\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"grab\"\n      }\n    }\n  },\n  particles: {\n    number: {\n      value: 200,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          password: data.password,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        password: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\15073\\Desktop\\facerecognitionbrain\\src\\App.js"],"names":["React","Component","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","Clarifai","app","App","apiKey","particleOptions","interactivity","detect_on","events","onhover","enable","mode","particles","number","value","density","value_area","constructor","loadUser","data","setState","user","id","name","password","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: '05add515f5534c1aa9f0376ba5598edd'\n});\n\nconst particleOptions = {\n\ninteractivity: {\n    detect_on: \"window\",\n    events: {\n       onhover: {\n          enable: true,\n          mode: \"grab\"\n       }\n      }\n    },\n\nparticles: {\n        number: {\n          value: 200,\n          density: {\n            enable: true,\n            value_area: 800\n          }\n        }\n    }\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        password: '',\n        email: '',\n        entries: 0,\n        joined: '',\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user:  {\n      id: data.id,\n      name: data.name,\n      password: data.password,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onSubmit = () => {\n      this.setState({imageUrl: this.state.input});\n      app.models.predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n        .catch(err => console.log(err));\n      }\n\n  onRouteChange = (route) => {\n    if(route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const {isSignedIn, imageUrl, route, box} = this.state;\n  return (\n    <div className=\"App\">\n      <Particles className='particles' \n                params={particleOptions} />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n      {route === 'home' \n      ? <div>\n          <Logo />\n          <Rank name={this.state.user.name} entries={this.state.user.entries} />\n          <ImageLinkForm \n            onInputChange={this.onInputChange} \n            onSubmit={this.onSubmit} />\n          <FaceRecognition box={box} imageUrl={imageUrl} />\n        </div>\n        : (\n          route === 'signin' \n          ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        )\n      }\n    </div>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}