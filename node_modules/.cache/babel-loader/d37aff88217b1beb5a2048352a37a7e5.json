{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\15073\\\\Desktop\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '05add515f5534c1aa9f0376ba5598edd'\n});\nconst particleOptions = {\n  interactivity: {\n    detect_on: \"window\",\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"grab\"\n      }\n    }\n  },\n  particles: {\n    number: {\n      value: 250,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\15073\\Desktop\\facerecognitionbrain\\src\\App.js"],"names":["React","Component","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Clarifai","app","App","apiKey","particleOptions","interactivity","detect_on","events","onhover","enable","mode","particles","number","value","density","value_area","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: '05add515f5534c1aa9f0376ba5598edd'\n});\n\nconst particleOptions = {\n\ninteractivity: {\n    detect_on: \"window\",\n    events: {\n       onhover: {\n          enable: true,\n          mode: \"grab\"\n       }\n      }\n    },\n\nparticles: {\n        number: {\n          value: 250,\n          density: {\n            enable: true,\n            value_area: 800\n          }\n        }\n    }\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onSubmit = () => {\n      this.setState({imageUrl: this.state.input});\n      app.models.predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n        .catch(err => console.log(err));\n      }\n\n  render() {\n  return (\n    <div className=\"App\">\n      <Particles className='particles' \n                params={particleOptions} />\n      <Navigation />\n      <Logo />\n      <Rank />\n      <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit} />\n      <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n    </div>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}